//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.11.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SD.HnD.DALAdapter.HelperClasses;
using SD.HnD.DALAdapter.FactoryClasses;
using SD.HnD.DALAdapter.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SD.HnD.DALAdapter.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'ActionRight'.<br/><br/></summary>
	[Serializable]
	public partial class ActionRightEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<ForumRoleForumActionRightEntity> _forumRoleForumActionRights;
		private EntityCollection<RoleSystemActionRightEntity> _roleSystemActionRights;
		private EntityCollection<RoleEntity> _systemRightAssignedToRoles;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static ActionRightEntityStaticMetaData _staticMetaData = new ActionRightEntityStaticMetaData();
		private static ActionRightRelations _relationsFactory = new ActionRightRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name ForumRoleForumActionRights</summary>
			public static readonly string ForumRoleForumActionRights = "ForumRoleForumActionRights";
			/// <summary>Member name RoleSystemActionRights</summary>
			public static readonly string RoleSystemActionRights = "RoleSystemActionRights";
			/// <summary>Member name SystemRightAssignedToRoles</summary>
			public static readonly string SystemRightAssignedToRoles = "SystemRightAssignedToRoles";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class ActionRightEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public ActionRightEntityStaticMetaData()
			{
				SetEntityCoreInfo("ActionRightEntity", InheritanceHierarchyType.None, false, (int)SD.HnD.DALAdapter.EntityType.ActionRightEntity, typeof(ActionRightEntity), typeof(ActionRightEntityFactory), false);
				AddNavigatorMetaData<ActionRightEntity, EntityCollection<ForumRoleForumActionRightEntity>>("ForumRoleForumActionRights", a => a._forumRoleForumActionRights, (a, b) => a._forumRoleForumActionRights = b, a => a.ForumRoleForumActionRights, () => new ActionRightRelations().ForumRoleForumActionRightEntityUsingActionRightID, typeof(ForumRoleForumActionRightEntity), (int)SD.HnD.DALAdapter.EntityType.ForumRoleForumActionRightEntity);
				AddNavigatorMetaData<ActionRightEntity, EntityCollection<RoleSystemActionRightEntity>>("RoleSystemActionRights", a => a._roleSystemActionRights, (a, b) => a._roleSystemActionRights = b, a => a.RoleSystemActionRights, () => new ActionRightRelations().RoleSystemActionRightEntityUsingActionRightID, typeof(RoleSystemActionRightEntity), (int)SD.HnD.DALAdapter.EntityType.RoleSystemActionRightEntity);
				AddNavigatorMetaData<ActionRightEntity, EntityCollection<RoleEntity>>("SystemRightAssignedToRoles", a => a._systemRightAssignedToRoles, (a, b) => a._systemRightAssignedToRoles = b, a => a.SystemRightAssignedToRoles, () => new ActionRightRelations().RoleSystemActionRightEntityUsingActionRightID, () => new RoleSystemActionRightRelations().RoleEntityUsingRoleID, "ActionRightEntity__", "RoleSystemActionRight_", typeof(RoleEntity), (int)SD.HnD.DALAdapter.EntityType.RoleEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static ActionRightEntity()
		{
		}

		/// <summary> CTor</summary>
		public ActionRightEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public ActionRightEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this ActionRightEntity</param>
		public ActionRightEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="actionRightID">PK value for ActionRight which data should be fetched into this ActionRight object</param>
		public ActionRightEntity(System.Int32 actionRightID) : this(actionRightID, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="actionRightID">PK value for ActionRight which data should be fetched into this ActionRight object</param>
		/// <param name="validator">The custom validator object for this ActionRightEntity</param>
		public ActionRightEntity(System.Int32 actionRightID, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ActionRightID = actionRightID;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected ActionRightEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ForumRoleForumActionRight' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoForumRoleForumActionRights() { return CreateRelationInfoForNavigator("ForumRoleForumActionRights"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'RoleSystemActionRight' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRoleSystemActionRights() { return CreateRelationInfoForNavigator("RoleSystemActionRights"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'Role' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSystemRightAssignedToRoles() { return CreateRelationInfoForNavigator("SystemRightAssignedToRoles"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this ActionRightEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static ActionRightRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ForumRoleForumActionRight' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathForumRoleForumActionRights { get { return _staticMetaData.GetPrefetchPathElement("ForumRoleForumActionRights", CommonEntityBase.CreateEntityCollection<ForumRoleForumActionRightEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RoleSystemActionRight' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRoleSystemActionRights { get { return _staticMetaData.GetPrefetchPathElement("RoleSystemActionRights", CommonEntityBase.CreateEntityCollection<RoleSystemActionRightEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Role' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSystemRightAssignedToRoles { get { return _staticMetaData.GetPrefetchPathElement("SystemRightAssignedToRoles", CommonEntityBase.CreateEntityCollection<RoleEntity>()); } }

		/// <summary>The ActionRightID property of the Entity ActionRight<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ActionRight"."ActionRightID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		[Required]
		public virtual System.Int32 ActionRightID
		{
			get { return (System.Int32)GetValue((int)ActionRightFieldIndex.ActionRightID, true); }
			set { SetValue((int)ActionRightFieldIndex.ActionRightID, value); }
		}

		/// <summary>The ActionRightDescription property of the Entity ActionRight<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ActionRight"."ActionRightDescription".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		[Required]
		[StringLength(50)]
		[MinLength(2)]
		public virtual System.String ActionRightDescription
		{
			get { return (System.String)GetValue((int)ActionRightFieldIndex.ActionRightDescription, true); }
			set { SetValue((int)ActionRightFieldIndex.ActionRightDescription, value); }
		}

		/// <summary>The AppliesToForum property of the Entity ActionRight<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ActionRight"."AppliesToForum".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		[Required]
		public virtual System.Boolean AppliesToForum
		{
			get { return (System.Boolean)GetValue((int)ActionRightFieldIndex.AppliesToForum, true); }
			set { SetValue((int)ActionRightFieldIndex.AppliesToForum, value); }
		}

		/// <summary>The AppliesToSystem property of the Entity ActionRight<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ActionRight"."AppliesToSystem".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		[Required]
		public virtual System.Boolean AppliesToSystem
		{
			get { return (System.Boolean)GetValue((int)ActionRightFieldIndex.AppliesToSystem, true); }
			set { SetValue((int)ActionRightFieldIndex.AppliesToSystem, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'ForumRoleForumActionRightEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ForumRoleForumActionRightEntity))]
		public virtual EntityCollection<ForumRoleForumActionRightEntity> ForumRoleForumActionRights { get { return GetOrCreateEntityCollection<ForumRoleForumActionRightEntity, ForumRoleForumActionRightEntityFactory>("ActionRight", true, false, ref _forumRoleForumActionRights); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'RoleSystemActionRightEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(RoleSystemActionRightEntity))]
		public virtual EntityCollection<RoleSystemActionRightEntity> RoleSystemActionRights { get { return GetOrCreateEntityCollection<RoleSystemActionRightEntity, RoleSystemActionRightEntityFactory>("ActionRight", true, false, ref _roleSystemActionRights); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'RoleEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(RoleEntity))]
		public virtual EntityCollection<RoleEntity> SystemRightAssignedToRoles { get { return GetOrCreateEntityCollection<RoleEntity, RoleEntityFactory>("AssignedSystemActionRights", false, true, ref _systemRightAssignedToRoles); } }

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace SD.HnD.DALAdapter
{
	public enum ActionRightFieldIndex
	{
		///<summary>ActionRightID. </summary>
		ActionRightID,
		///<summary>ActionRightDescription. </summary>
		ActionRightDescription,
		///<summary>AppliesToForum. </summary>
		AppliesToForum,
		///<summary>AppliesToSystem. </summary>
		AppliesToSystem,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SD.HnD.DALAdapter.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: ActionRight. </summary>
	public partial class ActionRightRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between ActionRightEntity and ForumRoleForumActionRightEntity over the 1:n relation they have, using the relation between the fields: ActionRight.ActionRightID - ForumRoleForumActionRight.ActionRightID</summary>
		public virtual IEntityRelation ForumRoleForumActionRightEntityUsingActionRightID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ForumRoleForumActionRights", true, new[] { ActionRightFields.ActionRightID, ForumRoleForumActionRightFields.ActionRightID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ActionRightEntity and RoleSystemActionRightEntity over the 1:n relation they have, using the relation between the fields: ActionRight.ActionRightID - RoleSystemActionRight.ActionRightID</summary>
		public virtual IEntityRelation RoleSystemActionRightEntityUsingActionRightID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "RoleSystemActionRights", true, new[] { ActionRightFields.ActionRightID, RoleSystemActionRightFields.ActionRightID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticActionRightRelations
	{
		internal static readonly IEntityRelation ForumRoleForumActionRightEntityUsingActionRightIDStatic = new ActionRightRelations().ForumRoleForumActionRightEntityUsingActionRightID;
		internal static readonly IEntityRelation RoleSystemActionRightEntityUsingActionRightIDStatic = new ActionRightRelations().RoleSystemActionRightEntityUsingActionRightID;

		/// <summary>CTor</summary>
		static StaticActionRightRelations() { }
	}
}
