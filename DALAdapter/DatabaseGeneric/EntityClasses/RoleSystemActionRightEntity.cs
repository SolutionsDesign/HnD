//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.11.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SD.HnD.DALAdapter.HelperClasses;
using SD.HnD.DALAdapter.FactoryClasses;
using SD.HnD.DALAdapter.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SD.HnD.DALAdapter.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'RoleSystemActionRight'.<br/><br/></summary>
	[Serializable]
	public partial class RoleSystemActionRightEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private ActionRightEntity _actionRight;
		private RoleEntity _role;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static RoleSystemActionRightEntityStaticMetaData _staticMetaData = new RoleSystemActionRightEntityStaticMetaData();
		private static RoleSystemActionRightRelations _relationsFactory = new RoleSystemActionRightRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name ActionRight</summary>
			public static readonly string ActionRight = "ActionRight";
			/// <summary>Member name Role</summary>
			public static readonly string Role = "Role";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class RoleSystemActionRightEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public RoleSystemActionRightEntityStaticMetaData()
			{
				SetEntityCoreInfo("RoleSystemActionRightEntity", InheritanceHierarchyType.None, false, (int)SD.HnD.DALAdapter.EntityType.RoleSystemActionRightEntity, typeof(RoleSystemActionRightEntity), typeof(RoleSystemActionRightEntityFactory), false);
				AddNavigatorMetaData<RoleSystemActionRightEntity, ActionRightEntity>("ActionRight", "RoleSystemActionRights", (a, b) => a._actionRight = b, a => a._actionRight, (a, b) => a.ActionRight = b, SD.HnD.DALAdapter.RelationClasses.StaticRoleSystemActionRightRelations.ActionRightEntityUsingActionRightIDStatic, ()=>new RoleSystemActionRightRelations().ActionRightEntityUsingActionRightID, null, new int[] { (int)RoleSystemActionRightFieldIndex.ActionRightID }, null, true, (int)SD.HnD.DALAdapter.EntityType.ActionRightEntity);
				AddNavigatorMetaData<RoleSystemActionRightEntity, RoleEntity>("Role", "RoleSystemActionRights", (a, b) => a._role = b, a => a._role, (a, b) => a.Role = b, SD.HnD.DALAdapter.RelationClasses.StaticRoleSystemActionRightRelations.RoleEntityUsingRoleIDStatic, ()=>new RoleSystemActionRightRelations().RoleEntityUsingRoleID, null, new int[] { (int)RoleSystemActionRightFieldIndex.RoleID }, null, true, (int)SD.HnD.DALAdapter.EntityType.RoleEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static RoleSystemActionRightEntity()
		{
		}

		/// <summary> CTor</summary>
		public RoleSystemActionRightEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public RoleSystemActionRightEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this RoleSystemActionRightEntity</param>
		public RoleSystemActionRightEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="roleID">PK value for RoleSystemActionRight which data should be fetched into this RoleSystemActionRight object</param>
		/// <param name="actionRightID">PK value for RoleSystemActionRight which data should be fetched into this RoleSystemActionRight object</param>
		public RoleSystemActionRightEntity(System.Int32 roleID, System.Int32 actionRightID) : this(roleID, actionRightID, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="roleID">PK value for RoleSystemActionRight which data should be fetched into this RoleSystemActionRight object</param>
		/// <param name="actionRightID">PK value for RoleSystemActionRight which data should be fetched into this RoleSystemActionRight object</param>
		/// <param name="validator">The custom validator object for this RoleSystemActionRightEntity</param>
		public RoleSystemActionRightEntity(System.Int32 roleID, System.Int32 actionRightID, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.RoleID = roleID;
			this.ActionRightID = actionRightID;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected RoleSystemActionRightEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ActionRight' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoActionRight() { return CreateRelationInfoForNavigator("ActionRight"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Role' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRole() { return CreateRelationInfoForNavigator("Role"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this RoleSystemActionRightEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static RoleSystemActionRightRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ActionRight' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathActionRight { get { return _staticMetaData.GetPrefetchPathElement("ActionRight", CommonEntityBase.CreateEntityCollection<ActionRightEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Role' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRole { get { return _staticMetaData.GetPrefetchPathElement("Role", CommonEntityBase.CreateEntityCollection<RoleEntity>()); } }

		/// <summary>The RoleID property of the Entity RoleSystemActionRight<br/><br/></summary>
		/// <remarks>Mapped on  table field: "RoleSystemActionRight"."RoleID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		[Required]
		public virtual System.Int32 RoleID
		{
			get { return (System.Int32)GetValue((int)RoleSystemActionRightFieldIndex.RoleID, true); }
			set { SetValue((int)RoleSystemActionRightFieldIndex.RoleID, value); }
		}

		/// <summary>The ActionRightID property of the Entity RoleSystemActionRight<br/><br/></summary>
		/// <remarks>Mapped on  table field: "RoleSystemActionRight"."ActionRightID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		[Required]
		public virtual System.Int32 ActionRightID
		{
			get { return (System.Int32)GetValue((int)RoleSystemActionRightFieldIndex.ActionRightID, true); }
			set { SetValue((int)RoleSystemActionRightFieldIndex.ActionRightID, value); }
		}

		/// <summary>Gets / sets related entity of type 'ActionRightEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(true)]
		public virtual ActionRightEntity ActionRight
		{
			get { return _actionRight; }
			set { SetSingleRelatedEntityNavigator(value, "ActionRight"); }
		}

		/// <summary>Gets / sets related entity of type 'RoleEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(true)]
		public virtual RoleEntity Role
		{
			get { return _role; }
			set { SetSingleRelatedEntityNavigator(value, "Role"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace SD.HnD.DALAdapter
{
	public enum RoleSystemActionRightFieldIndex
	{
		///<summary>RoleID. </summary>
		RoleID,
		///<summary>ActionRightID. </summary>
		ActionRightID,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SD.HnD.DALAdapter.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: RoleSystemActionRight. </summary>
	public partial class RoleSystemActionRightRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between RoleSystemActionRightEntity and ActionRightEntity over the m:1 relation they have, using the relation between the fields: RoleSystemActionRight.ActionRightID - ActionRight.ActionRightID</summary>
		public virtual IEntityRelation ActionRightEntityUsingActionRightID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ActionRight", false, new[] { ActionRightFields.ActionRightID, RoleSystemActionRightFields.ActionRightID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between RoleSystemActionRightEntity and RoleEntity over the m:1 relation they have, using the relation between the fields: RoleSystemActionRight.RoleID - Role.RoleID</summary>
		public virtual IEntityRelation RoleEntityUsingRoleID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Role", false, new[] { RoleFields.RoleID, RoleSystemActionRightFields.RoleID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticRoleSystemActionRightRelations
	{
		internal static readonly IEntityRelation ActionRightEntityUsingActionRightIDStatic = new RoleSystemActionRightRelations().ActionRightEntityUsingActionRightID;
		internal static readonly IEntityRelation RoleEntityUsingRoleIDStatic = new RoleSystemActionRightRelations().RoleEntityUsingRoleID;

		/// <summary>CTor</summary>
		static StaticRoleSystemActionRightRelations() { }
	}
}
